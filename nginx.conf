worker_processes  ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
env LAPIS_ENVIRONMENT;

events {
    worker_connections 1024;
}

http {
    include mime.types;

    server {
        listen ${{PORT}};
        default_type text/html;

        location / {
            root static;
            try_files $uri @lua;
        }

        location @lua {
            set $_url "";
            lua_code_cache off;
            content_by_lua_file "web.lua";
        }

        location /proxy {
            internal;
            rewrite_by_lua "
              local req = ngx.req

              for k,v in pairs(req.get_headers()) do
                if k ~= 'content-length' then
                  req.clear_header(k)
                end
              end

              if ngx.ctx.headers then
                for k,v in pairs(ngx.ctx.headers) do
                  req.set_header(k, v)
                end
              end
            ";

            proxy_http_version 1.1;
            proxy_pass $_url;
        }
    }
}
